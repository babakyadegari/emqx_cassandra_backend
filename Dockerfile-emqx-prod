ARG BUILD_FROM=erlang:22.1-alpine
ARG RUN_FROM=erlang:22.1-alpine

FROM ${RUN_FROM} as docker-emqx-prod

# emqx will occupy these port:
# - 1883 port for MQTT
# - 8080 for mgmt API
# - 8083 for WebSocket/HTTP
# - 8084 for WSS/HTTPS
# - 8883 port for MQTT(SSL)
# - 11883 port for internal MQTT/TCP
# - 18083 for dashboard
# - 4369 for port mapping
# - 5369 for gen_rpc port mapping
# - 6369 for distributed node
EXPOSE 1883 8080 8083 8084 8883 11883 18083 4369 5369 6369

#VOLUME ["/opt/emqx/log", "/opt/emqx/data", "/opt/emqx/lib", "/opt/emqx/etc"]

RUN apk update && apk add openssl \
    bash \
    libuv-dev \
    libressl-dev \
    gcc

COPY --from=byadegari/emqx-builder-latest /emqx-rel/_build/emqx/rel/emqx/. /opt/emqx/
COPY ./docker-entrypoint.sh start.sh /usr/bin/

RUN ln -s /opt/emqx/bin/* /usr/local/bin/

WORKDIR /opt/emqx

#RUN adduser -D -u 1000 emqx \
#    && echo "emqx ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers

#RUN chgrp -Rf emqx /opt/emqx && chmod -Rf g+w /opt/emqx \
#      && chown -Rf emqx /opt/emqx

RUN chmod +x /usr/bin/docker-entrypoint.sh /usr/bin/start.sh

RUN echo '{emqx_cassandra_backend, true}.' >> /opt/emqx/data/loaded_plugins

RUN printf "{emqx_mod_acl_internal, false}.\n{emqx_mod_presence, false}." > /opt/emqx/data/loaded_modules

#USER emqx

ENTRYPOINT ["/usr/bin/docker-entrypoint.sh"]
CMD ["/usr/bin/start.sh"]

#RUN printf "#!/bin/bash\ntail -f > /dev/null" > /start.sh
#RUN chmod +x /start.sh
#CMD ["/start.sh"]
